Option Compare Database
Option Explicit


' ---------------------------------
' SUB:          Button_rpt_by_Park_Click
' Description:  Button click actions
' Assumptions:  -
' Parameters:   -
' Returns:      -
' Throws:       none
' References:
'   Juan Soto, October 31, 2011
'   https://accessexperts.com/blog/2011/10/31/more-alter-table-sql-statement-help/
'   Aiken, December 3, 2014
'   http://stackoverflow.com/questions/19369132/declare-and-initialize-string-array-in-vba
' Source/date:  Russ DenBleyker, unknown - for NCPN tools
' Adapted:      -
' Revisions:
'   RD - ?          - initial version
'   BLC - 8/21/2015 - added update for underlying qry's table (temp_Sp_Rpt_by_Park_Complete)
'   BLC - 9/1/2015  - updated comment reference since underlying query qry_Sp_Rpt_by_Park_Rollup was
'                     replaced by the table temp_Sp_Rpt_by_Park_Rollup, added temporary revision
'                     of qry_Sp_Rpt_by_Park_Complete_Create_Table for filtered data (added appropriate
'                     WHERE clause) & reverted to original qdf SQL after running (for next time)
'   BLC - 3/7/2016  - fixed error where strSQL was not being replaced w/ strSQLNew causing report
'                     to ignore change in WHERE clause/prior data & not regenerate the proper report data set
'   BLC - 3/8/2016  - fixed issue where old data wasn't being refreshed in temp_Sp_Rpt_by_Park_Rollup
'                     by running qry_Sp_Rpt_by_Park_Rollup_Create_Table to refresh data from current back-end
'   BLC - 3/9/2016  - added multi-column indices to speed _Rollup query & report generation
'                     indexes performed slightly better than adding multicolum/autogenerated ID primary keys to
'                     temp_Sp_Rpt_by_Park_Complete & temp_Sp_Rpt_by_Park_Rollup tables
'                     report generation time dropped from ~5min -> ~48sec for 18212 results across all parks/years,
'                     added additional query/table statusbar messaging
'                     n.b. status bar messages are superceded by app Run Query, etc. (fix later)
'   BLC - 3/16/2016 - fix issue resulting in parameter error #3474 data type mismatch in criteria expression
'                     due to where clause in existing qry_Sp_Rpt_by_Park_Complete_Create_Table which was:
'                     WHERE Len(SpeciesYears) > Len(Replace(SpeciesYears, CStr(2014), ''))
'                     remove it and leave existing ORDER BY clause
'                     added report filter display via OpenArgs
'   AZ - 3/23/2022  - Generating 'temp_Sp_Rpt_by_Park_Complete' takes most of the time. It doesn't make much difference
'                       if you do all the plots for a given park, or just one-- it takes about the same amount of time.
'                     Modified report to start a new page for every plot and
'                     modified AfterUpdate & OnChange events of Park_Code drop down to limit list to tbl_Revisit_List.
'                     Replaced qry_Sp_Rpt_All with qry_Sp_Rpt_All_Revisits, which limits query to current year plots.
'   AZ - 3/25/2022  - Added a bunch of code at the end to split out each plot into a separate pdf
'                        and save it in the proper location; this will be moved in a bit
'   AZ - 3/26/2022  - This code is now being called from a function
' ---------------------------------
'Private Sub Button_rpt_by_Park_Click()      'old name

Private Sub GenerateSpeciesList()           'new name
On Error GoTo Err_Handler


Dim StartTimeTotal As Double
Dim StartTimeQuery As Double
Dim SecondsElapsedTotal As Double
Dim SecondsElapsedQuery As Double
StartTimeTotal = Timer

    'set statusbar notice
    SysCmd acSysCmdSetStatus, "Running report ..."
    
    Screen.MousePointer = 11 'Hour Glass

    Dim strFilter As String, strWhere As String, strParkWhere As String, strPlotWhere As String, strYrWhere As String, strSpeciesYear As String
    Dim stDocName As String

    'defaults
    strFilter = ""
    strWhere = ""
    strParkWhere = ""
    strPlotWhere = ""
    strYrWhere = ""

    stDocName = "rpt_Species_by_Park"
    
    ' Set where condition if needed
    If (IsNull(Me!Park_Code) + IsNull(Me!Visit_Date) + IsNull(Me!Plot)) > -3 Then
      
      'park
      If Not IsNull(Me!Park_Code) Then
        strParkWhere = "Unit_Code = '" & Me!Park_Code & "'"
        strFilter = Me!Park_Code
      Else
        
      End If
      
      'plot --> NOTE: assumes UI will not allow plot selection w/o park
      If Not IsNull(Me!Plot) Then
        strPlotWhere = "Plot_ID = " & Me!Plot
        strFilter = strFilter & "- plot #" & Me!Plot
      End If
      
      'year
      If Not IsNull(Me!Visit_Date) Then
'        strYrWhere = "Len(SpeciesYear) > Len(Replace(SpeciesYear, CStr(" & Me!Visit_Date & "), ''))"
        '(qry_Sp_Rpt_All.Utah_Species+"-"+CStr(qry_Sp_Rpt_All.Year)) AS SpeciesYear
        strSpeciesYear = "(qry_Sp_Rpt_All_Revisits.Utah_Species+' - '+CStr(qry_Sp_Rpt_All_Revisits.Year))"
        strYrWhere = "Len(" & strSpeciesYear & ") > Len(Replace(" & strSpeciesYear & ", CStr(" & Me!Visit_Date & "), ''))"

        'set filter display
        Select Case Len(strFilter)
            Case 0 'year only
                strFilter = CStr(Me!Visit_Date)
            Case 4 'park only
                strFilter = strFilter & "-" & CStr(Me!Visit_Date)
            Case Is > 4 'park & plot
                strFilter = Replace(strFilter, "-", "-" & CStr(Me!Visit_Date) & " ")
        End Select
      
      Else
        'clear extra "-" for park & plot filter
        strFilter = Replace(strFilter, "-", "")
      End If
      
      'prepare where using string array & PrepareWhereClause
      Dim ary() As String
      ary = Split(strParkWhere & ";" & strPlotWhere & ";" & strYrWhere, ";")
      strWhere = PrepareWhereClause(ary)
      
'      If Not IsNull(Me!Park_Code) Then
'        strWhere = "Unit_Code = '" & Me!Park_Code & "'"
'        If Not IsNull(Me!Plot) Then
'          strWhere = strWhere & " And Plot_ID = " & Me!Plot
'        End If
'        If Not IsNull(Me!Visit_Date) Then
'          'strWhere = strWhere & " AND Visit_Year = " & Me!Visit_Date
'          'strWhere = strWhere & " AND " & Me!Visit_Date & " IN (replace(SpeciesYears, '|', ','))"
'          'strWhere = strWhere & " AND " & Me!Visit_Date & " LIKE SpeciesYears"
'          strWhere = strWhere & " AND Len(SpeciesYear) > Len(Replace(SpeciesYear, CStr(" & Me!Visit_Date & "), ''))"
'        End If
'      Else
'        'strWhere = "Visit_Year = " & Me!Visit_Date
'        'strWhere = Me!Visit_Date & " IN (replace(SpeciesYears, '|', ','))"
'        'WHERE Len(SpeciesYears) > Len(Replace(SpeciesYears, CStr(2014), ''));
'        strWhere = "Len(SpeciesYear) > Len(Replace(SpeciesYear, CStr(" & Me!Visit_Date & "), ''))"
'      End If
    End If
    
    'retrieve querydef
    Dim qdf As QueryDef
    Dim strSQL As String
    
    'replace qry_Sp_Rpt_All to qry_Sp_Rpt_All_Revisits (az)
    Set qdf = CurrentDb.QueryDefs("qry_Sp_Rpt_by_Park_Complete_Create_Table")
    strSQL = qdf.SQL

'SELECT DISTINCT
'qry_Sp_Rpt_All.Unit_Code,
'qry_Sp_Rpt_All.Year,
'qry_Sp_Rpt_All.Plot_ID,
'qry_Sp_Rpt_All.Master_Family,
'qry_Sp_Rpt_All.Utah_Species,
'(qry_Sp_Rpt_All.Utah_Species+"-"+CStr(qry_Sp_Rpt_All.Year)) AS SpeciesYear,
'(qry_Sp_Rpt_All.Unit_Code+"-"+CStr(qry_Sp_Rpt_All.Plot_ID)+"-"+CStr(qry_Sp_Rpt_All.Utah_Species)) AS ParkPlotSpecies,
'(qry_Sp_Rpt_All.Unit_Code+"-"+CStr(qry_Sp_Rpt_All.Utah_Species)) AS ParkSpecies,
'(qry_Sp_Rpt_All.Unit_Code+"-"+CStr(qry_Sp_Rpt_All.Plot_ID)) AS ParkPlot INTO temp_Sp_Rpt_by_Park_Complete
'FROM qry_Sp_Rpt_All
'WHERE Len(SpeciesYears) > Len(Replace(SpeciesYears, CStr(2014), ''))
'ORDER BY qry_Sp_Rpt_All.Unit_Code, qry_Sp_Rpt_All.Plot_ID, qry_Sp_Rpt_All.Master_Family, qry_Sp_Rpt_All.Utah_Species;

    'update the SQL if parameters exist
    If Len(strWhere) > 0 Then
        Dim iOrderBy As Integer
        Dim strSQLNew As String
        
        'replace ORDER with WHERE clause + ORDER
        strSQLNew = Replace(strSQL, "ORDER", " WHERE " & strWhere & " ORDER")
        qdf.SQL = strSQLNew 'was strSQL
        Debug.Print strSQLNew
    End If
    
StartTimeQuery = Timer

    'update underlying table (temp_Sp_Rpt_by_Park_Complete is used in report's underlying table temp_Sp_Rpt_by_Park_Rollup)
    DoCmd.SetWarnings False
    DoCmd.OpenQuery "qry_Sp_Rpt_by_Park_Complete_Create_Table", acViewNormal
    
SecondsElapsedQuery = Round(Timer - StartTimeQuery, 2)


    'update status bar
    SysCmd acSysCmdSetStatus, "Generating complete results..."
    'DoEvents
    'Application.Echo False, "Generating complete results..."
    'Application.Echo True, ""
    
    'add an index to improve report performance
    Dim strIdxSQL As String
    
    strIdxSQL = "CREATE INDEX idxParkPlotSpeciesYear ON temp_Sp_Rpt_by_Park_Complete (ParkPlotSpecies, Year)"
    CurrentDb.Execute strIdxSQL
    
    DoCmd.SetWarnings True
    
    'reset qdf SQL
    qdf.SQL = strSQL
    
    'update underlying table (temp_Sp_Rpt_by_Park_Rollup)
    DoCmd.SetWarnings False
    DoCmd.OpenQuery "qry_Sp_Rpt_by_Park_Rollup_Create_Table", acViewNormal
    
    'update status bar
    SysCmd acSysCmdSetStatus, "Generating rollup..."
    'DoEvents
    'Application.Echo False, "Generating rollup..."
    'Application.Echo True, ""
    
    'add an index to improve report performance
    strIdxSQL = "CREATE INDEX idxParkPlotSpeciesYears ON temp_Sp_Rpt_by_Park_Rollup (ParkPlotSpecies, SpeciesYears)"
    CurrentDb.Execute strIdxSQL
    
    DoCmd.SetWarnings True
    
    'update status bar
    SysCmd acSysCmdSetStatus, "Preparing report..."
    'DoEvents
    'Application.Echo False, "Preparing report..."
    'Application.Echo True, ""
    
    'translate SQL Where for rollup --> SpeciesYear = SpeciesYears, ,qry_Sp_Rpt_All.Year = SpeciesYears, qry_Sp_Rpt_All.Utah_species = "Utah.species"
    Dim aryText() As String
    aryText = Split("SpeciesYear|SpeciesYears||qry_Sp_Rpt_All_Revisits.Year|SpeciesYears||qry_Sp_Rpt_All_Revisits.Utah_species|Utah_species", "||")
    strWhere = ReplaceMulti(strWhere, aryText)
    'strWhere = Replace(strWhere, Replace(strSpeciesYear, "SpeciesYear", "SpeciesYears"), "SpeciesYears")
    
    'open report --> strWhere = WHERE clause filter, strFilter = display for filter if present
    DoCmd.OpenReport stDocName, acViewPreview, , strWhere, acWindowNormal, strFilter
   Debug.Print "zero"
'-------------------------------------------------------------------------------------------------
'part 2
    
    'Make directory if it doesn't already exist
    Dim spath As String
    Dim FolderExists As Boolean

    spath = Application.CurrentProject.Path & "\RevisitReports\" & Me!Park_Code & "\Species"
    FolderExists = (Len(Dir$(spath, vbDirectory)) > 0&)
    If Not FolderExists Then
        Call MkMyDir(spath)
    End If
    
    Dim sprpt As Access.Report
    Dim sprs As dao.Recordset
    Dim spSQL As String
    Dim thePlot As Integer
    Dim filename As String
        
    'loop through plots and save as pdf's
    Set sprpt = Reports("rpt_Species_by_Park").Report
    Debug.Print "zero-one"
    spSQL = "SELECT tbl_Revisit_List.Plot FROM tbl_Revisit_List " & _
        "WHERE (((tbl_Revisit_List.Park) = '" & Me!Park_Code & "' ))ORDER BY tbl_Revisit_List.Plot;"
    Debug.Print "zero-two"
    Set sprs = CurrentDb.OpenRecordset(spSQL)
    Debug.Print "zero-three"
    If Not sprs.BOF And Not sprs.EOF Then
      Debug.Print "one"
        sprs.MoveFirst
        While (Not sprs.EOF)
            
            thePlot = sprs.Fields("Plot")
            filename = spath & "\SpeciesByPark_" & Me!Park_Code & thePlot & ".pdf"
            sprpt.Filter = "Plot_ID = " & thePlot
            sprpt.FilterOn = True
            DoEvents
            Debug.Print "two"
            DoCmd.OutputTo acOutputReport, "rpt_Species_by_Park", acFormatPDF, filename
    
            sprs.MoveNext
        Wend
    End If
    
    sprs.Close
    DoCmd.Close acReport, stDocName
    
    Set sprs = Nothing
    
    
    SysCmd acSysCmdSetStatus, "Report complete."
    
    Screen.MousePointer = 1 'Standard Cursor
    'clear status bar
    SysCmd acSysCmdSetStatus, " "
    
    
SecondsElapsedTotal = Round(Timer - StartTimeTotal, 2)
MsgBox "That was " & SecondsElapsedTotal & " seconds of waiting for this code to run." & vbNewLine & _
        "Creating the table --temp_Sp_Rpt_by_Park_Complete- took " & SecondsElapsedQuery & " seconds, " & vbNewLine & _
        "which is " & Round(SecondsElapsedQuery / SecondsElapsedTotal * 100, 0) & "% of the total time.", vbInformation

  
Exit_Handler:
    Set qdf = Nothing
    Exit Sub

Err_Handler:
    Select Case Err.Number
      Case Else
        MsgBox "Error #" & Err.Number & ": " & Err.Description, vbCritical, _
            "Error encountered (#" & Err.Number & " - Button_rpt_by_Park_Click[Form_frm_Species_Report_Select])"
    End Select
    Resume Exit_Handler
End Sub

Private Sub this()


    'loop through plots and save as pdf's
    Set sprpt = Reports("rpt_Species_by_Park").Report
    spSQL = "SELECT tbl_Revisit_List.Plot FROM tbl_Revisit_List " & _
        "WHERE (((tbl_Revisit_List.Park) = '" & Me!cbxPark & "' )) ORDER BY tbl_Revisit_List.Plot;"
    Set sprs = CurrentDb.OpenRecordset(spSQL)
    
    If Not sprs.BOF And Not sprs.EOF Then
        sprs.MoveFirst
        
        While (Not sprs.EOF)
            thePlot = sprs.Fields("Plot")
            filename = spath & "\SpeciesByPark_" & Me!Park_Code & thePlot & ".pdf"
            sprpt.Filter = "Plot_ID = " & thePlot
            sprpt.FilterOn = True
            DoEvents
            Debug.Print "two"
            DoCmd.OutputTo acOutputReport, "rpt_Species_by_Park", acFormatPDF, filename
    
            sprs.MoveNext
        Wend
    End If
    
    sprs.Close
    DoCmd.Close acReport, stDocName
    
    Set sprs = Nothing
    
    
    SysCmd acSysCmdSetStatus, "Report complete."
    
    Screen.MousePointer = 1 'Standard Cursor
      
    
SecondsElapsedTotal = Round(Timer - StartTimeTotal, 2)
MsgBox "That was " & SecondsElapsedTotal & " seconds of waiting for this code to run." & vbNewLine & _
        "Creating the table --temp_Sp_Rpt_by_Park_Complete- took " & SecondsElapsedQuery & " seconds, " & vbNewLine & _
        "which is " & Round(SecondsElapsedQuery / SecondsElapsedTotal * 100, 0) & "% of the total time.", vbInformation

  
Exit_Handler:
    Set qdf = Nothing
    Exit Sub

Err_Handler:
    Select Case Err.Number
      Case Else
        MsgBox "Error #" & Err.Number & ": " & Err.Description, vbCritical, _
            "Error encountered (#" & Err.Number & " - Button_rpt_by_Park_Click[Form_frm_Species_Report_Select])"
    End Select
    Resume Exit_Handler
    
End Sub