dbMemo "SQL" ="PARAMETERS tid Text ( 50 );\015\012SELECT *\015\012FROM (SELECT L.Unit_Code AS U"
    "nitCode, L.Plot_ID AS PlotID, E.Start_Date AS VisitDate, CT.Transect AS Transect"
    ", BG.Transect_ID AS TransectID, BG.Gap_ID AS GapID, BG.Gap_Start AS GapStart, BG"
    ".Gap_End AS GapEnd, \"Gap size < 20 cm\" AS Issue \015\012FROM tbl_Locations L I"
    "NNER JOIN (tbl_Events E INNER JOIN (tbl_Canopy_Transect CT INNER JOIN tbl_Basal_"
    "Gaps BG ON CT.Transect_ID = BG.Transect_ID) ON E.Event_ID = CT.Event_ID) ON L.Lo"
    "cation_ID = E.Location_ID\015\012WHERE [BG]![Gap_Start]-[BG]![Gap_End]<20\015\012"
    "UNION\015\012SELECT L.Unit_Code AS UnitCode, L.Plot_ID AS PlotID, E.Start_Date A"
    "S VisitDate, CT.Transect AS Transect, BG.Transect_ID AS TransectID, BG.Gap_ID AS"
    " GapID, BG.Gap_Start AS GapStart, BG.Gap_End AS GapEnd, \"Gap start < 0 cm\" AS "
    "Issue \015\012FROM tbl_Locations L INNER JOIN (tbl_Events E INNER JOIN (tbl_Cano"
    "py_Transect CT INNER JOIN tbl_Basal_Gaps BG ON CT.Transect_ID = BG.Transect_ID) "
    "ON E.Event_ID = CT.Event_ID) ON L.Location_ID = E.Location_ID\015\012WHERE BG.Ga"
    "p_Start<0\015\012UNION\015\012SELECT L.Unit_Code AS UnitCode, L.Plot_ID AS PlotI"
    "D, E.Start_Date AS VisitDate, CT.Transect AS Transect, BG.Transect_ID AS Transec"
    "tID, BG.Gap_ID AS GapID, BG.Gap_Start AS GapStart, BG.Gap_End AS GapEnd, \"Gap s"
    "tart > 5000 cm\" AS Issue \015\012FROM tbl_Locations L INNER JOIN (tbl_Events E "
    "INNER JOIN (tbl_Canopy_Transect CT INNER JOIN tbl_Basal_Gaps BG ON CT.Transect_I"
    "D = BG.Transect_ID) ON E.Event_ID = CT.Event_ID) ON L.Location_ID = E.Location_I"
    "D\015\012WHERE BG.Gap_Start>5000\015\012UNION\015\012SELECT L.Unit_Code AS UnitC"
    "ode, L.Plot_ID AS PlotID, E.Start_Date AS VisitDate, CT.Transect AS Transect, BG"
    ".Transect_ID AS TransectID, BG.Gap_ID AS GapID, BG.Gap_Start AS GapStart, BG.Gap"
    "_End AS GapEnd, \"Gap end < 0 cm\" AS Issue \015\012FROM tbl_Locations L INNER J"
    "OIN (tbl_Events E INNER JOIN (tbl_Canopy_Transect CT INNER JOIN tbl_Basal_Gaps B"
    "G ON CT.Transect_ID = BG.Transect_ID) ON E.Event_ID = CT.Event_ID) ON L.Location"
    "_ID = E.Location_ID\015\012WHERE BG.Gap_End<0\015\012UNION\015\012SELECT L.Unit_"
    "Code AS UnitCode, L.Plot_ID AS PlotID, E.Start_Date AS VisitDate, CT.Transect AS"
    " Transect, BG.Transect_ID AS TransectID, BG.Gap_ID AS GapID, BG.Gap_Start AS Gap"
    "Start, BG.Gap_End AS GapEnd, \"Gap end > 5000 cm\" AS Issue \015\012FROM tbl_Loc"
    "ations L INNER JOIN (tbl_Events E INNER JOIN (tbl_Canopy_Transect CT INNER JOIN "
    "tbl_Basal_Gaps BG ON CT.Transect_ID = BG.Transect_ID) ON E.Event_ID = CT.Event_I"
    "D) ON L.Location_ID = E.Location_ID\015\012WHERE BG.Gap_End>5000\015\012UNION\015"
    "\012SELECT L.Unit_Code AS UnitCode, L.Plot_ID AS PlotID, E.Start_Date AS VisitDa"
    "te, CT.Transect AS Transect, BG.Transect_ID AS TransectID, BG.Gap_ID AS GapID, B"
    "G.Gap_Start AS GapStart, BG.Gap_End AS GapEnd, \"Gap start is missing\" AS Issue"
    " \015\012FROM tbl_Locations L INNER JOIN (tbl_Events E INNER JOIN (tbl_Canopy_Tr"
    "ansect CT INNER JOIN tbl_Basal_Gaps BG ON CT.Transect_ID = BG.Transect_ID) ON E."
    "Event_ID = CT.Event_ID) ON L.Location_ID = E.Location_ID\015\012WHERE BG.Gap_Sta"
    "rt Is Null\015\012UNION\015\012SELECT L.Unit_Code AS UnitCode, L.Plot_ID AS Plot"
    "ID, E.Start_Date AS VisitDate, CT.Transect AS Transect, BG.Transect_ID AS Transe"
    "ctID, BG.Gap_ID AS GapID, BG.Gap_Start AS GapStart, BG.Gap_End AS GapEnd, \"Gap "
    "end is missing\" AS Issue \015\012FROM tbl_Locations L INNER JOIN (tbl_Events E "
    "INNER JOIN (tbl_Canopy_Transect CT INNER JOIN tbl_Basal_Gaps BG ON CT.Transect_I"
    "D = BG.Transect_ID) ON E.Event_ID = CT.Event_ID) ON L.Location_ID = E.Location_I"
    "D\015\012WHERE BG.Gap_End Is Null\015\012UNION\015\012SELECT UnitCode, PlotID, V"
    "isitDate, Transect, TransectID, GapID, GapStart, GapEnd, \"Gap end <= next gap s"
    "tart\" AS Issue\015\012FROM GapDataOverlapCheckResult)  AS [%$##@_Alias]\015\012"
    "WHERE TransectID = [tid];\015\012"
dbMemo "Connect" =""
dbBoolean "ReturnsRecords" ="-1"
dbInteger "ODBCTimeout" ="60"
dbBoolean "OrderByOn" ="0"
dbByte "Orientation" ="0"
dbByte "DefaultView" ="2"
dbBoolean "FilterOnLoad" ="0"
dbBoolean "OrderByOnLoad" ="-1"
dbText "Filter" ="[Unit_Code]='CEBR' AND [Plot_ID]=133"
Begin
End
